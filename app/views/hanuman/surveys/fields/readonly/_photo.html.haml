.form-group
  = render "hanuman/surveys/fields/readonly/shared/label", o: o
  .col-sm-7
    - o.observation_photos.order(sort_order: :asc).each do |p|
      - photo_url = cloudinary_url(p.photo, :sign_url => true)
      - if photo_url.blank?
        %p.form-control-static.bg-danger PHOTO NOT FOUND
        = p.photo.my_public_id + "." + p.photo.format + " | this photo failed to upload successfully, please retry upload or remove"
        %br
        %br
      - else
        = link_to cl_image_tag(p.photo, :crop => :fill, :width => 350, :sign_url => true, angle: p.rotation), cloudinary_url(p.photo, :sign_url => true, angle: p.rotation), html_options = {"data-gallery" => "", class: "gallery-item gallery-photo", id: "photo_" + p.id.to_s, :"data-content-type" => p.photo.resource_type, :"data-download-url" => cloudinary_url(p.photo, :sign_url => true, angle: p.rotation), :"data-file-name" => p.photo.public_id}
        = link_to p.photo.my_public_id + "." + p.photo.format + " | download file", cloudinary_url(p.photo, attachment: true, :sign_url => true, angle: p.rotation), html_options = { download: true }
        %br
        %br
      %label
        Photo description
      %br
      = p.description
      %br
      %br

      %label
        Photo geolocation data
      %br
      Coordinates:
      =p.latitude.to_f.round(8).to_s + ", " + p.longitude.to_f.round(8).to_s
      %br
      - unless p.speed.blank?
        Speed:
        =p.speed.to_f.round(6)
        m/s
        %br
      - unless p.direction.blank?
        Heading:
        =p.direction.to_f.round(6)
        degrees
        %br
      - unless p.altitude.blank?
        Altitude:
        =p.altitude.to_f.round(6)
        m
        %br
      - unless p.accuracy.blank?
        Accuracy:
        =p.accuracy.to_f.round(2)
        m
        %br
      %br
      %label
        Photo sort order
      %br
      = p.sort_order
      %br
      %br
      %br
      %br
